{"ast":null,"code":"var _jsxFileName = \"/home/caleb/passwordfix/EWC/front-end/src/Uplink.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst back_end = \"http://localhost:8080/\";\nlet Uplink = {}; //check the status of the response and convert to json\n\nvar check_status = response => {\n  if (response.status !== 200) {\n    throw response.status;\n  }\n\n  return response.json();\n}; //package data into a json, in case of array\n\n\nvar package_data = data => {\n  return {\n    data: data\n  };\n}; //error handling\n\n\nvar catch_errors = error => {\n  console.log(\"error\");\n  return {\n    error: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: [\"Sorry, there was an error retrieving your data.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 53\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 58\n        }, this), \"Error: \\\"\", error.toString(), \"\\\"\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 38\n        }, this), \"Please contact the System Administrator.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }, this)\n  };\n}; //retrieve data from server\n\n\nUplink.get_data = function (endpoint) {\n  return fetch(back_end + endpoint).then(check_status).then(package_data).catch(catch_errors);\n}; //send data to server and receive response\n\n\nUplink.send_data = function (endpoint, method, body) {\n  const request_options = {\n    method: method.toUpperCase(),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(body)\n  };\n  return fetch(back_end + endpoint, request_options).then(check_status).then(package_data).catch(catch_errors);\n};\n\nexport default Uplink;","map":{"version":3,"sources":["/home/caleb/passwordfix/EWC/front-end/src/Uplink.js"],"names":["back_end","Uplink","check_status","response","status","json","package_data","data","catch_errors","error","console","log","textAlign","toString","get_data","endpoint","fetch","then","catch","send_data","method","body","request_options","toUpperCase","headers","JSON","stringify"],"mappings":";;AAAA,MAAMA,QAAQ,GAAG,wBAAjB;AAEA,IAAIC,MAAM,GAAG,EAAb,C,CAEA;;AACA,IAAIC,YAAY,GAAIC,QAAD,IACnB;AACC,MAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EACA;AACC,UAAMD,QAAQ,CAACC,MAAf;AACA;;AAED,SAAOD,QAAQ,CAACE,IAAT,EAAP;AACA,CARD,C,CAUA;;;AACA,IAAIC,YAAY,GAAIC,IAAD,IACnB;AACC,SAAQ;AAACA,IAAAA,IAAI,EAAEA;AAAP,GAAR;AACA,CAHD,C,CAKA;;;AACA,IAAIC,YAAY,GAAIC,KAAD,IACnB;AACCC,EAAAA,OAAO,CAACC,GAAR,CAAa,OAAb;AACA,SACA;AACCF,IAAAA,KAAK,eACJ;AAAA,6BACC;AAAI,QAAA,KAAK,EAAE;AAACG,UAAAA,SAAS,EAAC;AAAX,SAAX;AAAA,mFACgD;AAAA;AAAA;AAAA;AAAA,gBADhD,eACqD;AAAA;AAAA;AAAA;AAAA,gBADrD,eAEUH,KAAK,CAACI,QAAN,EAFV,qBAE4B;AAAA;AAAA;AAAA;AAAA,gBAF5B,eAEiC;AAAA;AAAA;AAAA;AAAA,gBAFjC;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AAFF,GADA;AAYA,CAfD,C,CAiBA;;;AACAZ,MAAM,CAACa,QAAP,GAAkB,UAAUC,QAAV,EAClB;AACC,SAAOC,KAAK,CAAEhB,QAAQ,GAAGe,QAAb,CAAL,CACLE,IADK,CACEf,YADF,EAELe,IAFK,CAEEX,YAFF,EAGLY,KAHK,CAGEV,YAHF,CAAP;AAKA,CAPD,C,CASA;;;AACAP,MAAM,CAACkB,SAAP,GAAmB,UAAUJ,QAAV,EAAoBK,MAApB,EAA4BC,IAA5B,EACnB;AACC,QAAMC,eAAe,GACrB;AACCF,IAAAA,MAAM,EAAEA,MAAM,CAACG,WAAP,EADT;AAECC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFV;AAGCH,IAAAA,IAAI,EAAEI,IAAI,CAACC,SAAL,CAAgBL,IAAhB;AAHP,GADA;AAOA,SAAOL,KAAK,CAAEhB,QAAQ,GAAGe,QAAb,EAAuBO,eAAvB,CAAL,CACLL,IADK,CACEf,YADF,EAELe,IAFK,CAEEX,YAFF,EAGLY,KAHK,CAGEV,YAHF,CAAP;AAKA,CAdD;;AAgBA,eAAeP,MAAf","sourcesContent":["const back_end = \"http://localhost:8080/\";\n\nlet Uplink = {};\n\n//check the status of the response and convert to json\nvar check_status = (response) =>\n{\n\tif (response.status !== 200)\n\t{\n\t\tthrow response.status;\n\t}\n\n\treturn response.json();\n};\n\n//package data into a json, in case of array\nvar package_data = (data) =>\n{\n\treturn ({data: data});\n};\n\n//error handling\nvar catch_errors = (error) =>\n{\n\tconsole.log (\"error\");\n\treturn (\n\t{\n\t\terror:\n\t\t\t<div>\n\t\t\t\t<h1 style={{textAlign:\"center\"}}>\n\t\t\t\t\tSorry, there was an error retrieving your data.<br/><br/>\n\t\t\t\t\tError: \"{error.toString()}\"<br/><br/>\n\n\t\t\t\t\tPlease contact the System Administrator.\n\t\t\t\t</h1>\n\t\t\t</div>\n\t})\n};\n\n//retrieve data from server\nUplink.get_data = function (endpoint)\n{\n\treturn fetch (back_end + endpoint)\n\t\t.then  (check_status)\n\t\t.then  (package_data)\n\t\t.catch (catch_errors)\n\t;\n};\n\n//send data to server and receive response\nUplink.send_data = function (endpoint, method, body)\n{\n\tconst request_options =\n\t{\n\t\tmethod: method.toUpperCase(),\n\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\tbody: JSON.stringify (body)\n\t};\n\n\treturn fetch (back_end + endpoint, request_options)\n\t\t.then  (check_status)\n\t\t.then  (package_data)\n\t\t.catch (catch_errors)\n\t;\n};\n\nexport default Uplink;\n"]},"metadata":{},"sourceType":"module"}
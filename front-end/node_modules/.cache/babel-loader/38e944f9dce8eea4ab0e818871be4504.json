{"ast":null,"code":"var _jsxFileName = \"/home/caleb/passwordfix/EWC/front-end/src/ServiceModal.js\";\nimport React, { Component } from \"react\";\nimport Button from \"./Button\";\nimport BulletList from \"./BulletList\"; //import     BulletItem from \"./BulletList\";\n\nimport Clickable from \"./Clickable\";\nimport JobDropdown from \"./JobDropdown\";\nimport WorkerDropdown from \"./WorkerDropdown\";\nimport Uplink from \"./Uplink\";\nimport \"./styles/indent.css\";\nimport \"./styles/ServiceModal.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ServiceModal extends Component {\n  constructor(props) {\n    super(props); //if new service, start in edit mode with empty service\n\n    this.has_job_and_date = () => {\n      return this.state.service.JobID && this.state.service.Days[0].Date;\n    };\n\n    this.sort_days = days => {\n      days.sort((day1, day2) => {\n        console.log(new Date(day1.Date) - new Date(day2.Date));\n        return new Date(day1.Date) - new Date(day2.Date);\n      });\n      return days;\n    };\n\n    this.create = () => {\n      let request_body = {\n        JobID: this.state.service.JobID,\n        ServiceDate: this.state.service.Days[0].Date\n      };\n      Uplink.send_data(\"service\", \"post\", request_body).then(response => {\n        if (response.error) {\n          alert(JSON.stringify(response.error));\n        } else if (response.data.errors && response.data.errors.length > 0) {\n          this.setState(state => {\n            state.errors = response.data.errors;\n            state.service.Days[0].Date = null;\n            state.editing_day = 0;\n            return state;\n          });\n        } else {\n          this.setState({\n            service: response.data,\n            mode: \"Edit\",\n            errors: []\n          });\n        }\n      });\n    };\n\n    this.confirm_close = response => {\n      if (response.error) {\n        alert(JSON.stringify(response.error));\n      } else {\n        //display errors, if any\n        if (response.data.errors && response.data.errors.length > 0) {\n          this.setState({\n            errors: response.data.errors\n          });\n        } //if no errors, close\n        else {\n            this.props.close_service();\n          }\n      }\n    };\n\n    this.update = close => {\n      const service = this.state.service;\n      let request_body = {\n        ServiceID: service.ServiceID,\n        JobID: service.JobID,\n        FinalPrice: service.FinalPrice,\n        Complete: service.Complete,\n        Days: service.Days.map(day => ({ ...day,\n          Workers: day.Workers.map(worker => worker.WorkerID)\n        }))\n      };\n      Uplink.send_data(\"service/\" + this.state.service.ServiceID, \"patch\", request_body).then(this.confirm_close);\n    };\n\n    this.remove = () => {\n      Uplink.send_data(\"service/\" + this.state.service.ServiceID, \"delete\").then(this.confirm_close);\n    };\n\n    this.save = close => {\n      if (this.has_job_and_date()) {\n        if (this.state.mode === \"Add\") {\n          this.create();\n        } else {\n          this.update(close);\n        }\n      }\n    };\n\n    this.edit_job = (job_id, job_name) => {\n      this.setState(state => {\n        state.service.JobName = job_name;\n        state.service.JobID = job_id;\n        state.editing_job = false;\n        state.duplicate_service_error = false;\n        return state;\n      }, () => {\n        this.save();\n      });\n    };\n\n    this.render_job = () => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.editing_job ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\n        /* edit job name */\n        this.state.mode === \"Add\" ? /*#__PURE__*/_jsxDEV(JobDropdown, {\n          size: \"x-large\",\n          select_option: this.edit_job\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 8\n        }, this) : /*#__PURE__*/_jsxDEV(JobDropdown, {\n          size: \"x-large\",\n          select_option: this.edit_job,\n          blank: null,\n          default: this.state.service.JobID\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 5\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Job: \", this.state.service.JobName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            label: \"Change\",\n            action: () => {\n              this.setState({\n                editing_job: true\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 3\n    }, this);\n\n    this.add_day = () => {\n      if (!Number.isInteger(this.state.editing_day)) {\n        this.setState(state => {\n          //add a day to the Days array with the same workers as the previous day\n          state.service.Days = state.service.Days.concat({\n            Date: \"\",\n            Workers: state.service.Days[state.service.Days.length - 1].Workers\n          }); //edit last day\n\n          state.editing_day = state.service.Days.length - 1;\n          return state;\n        });\n      }\n    };\n\n    this.remove_day = day_index => {\n      return () => {\n        this.setState(state => {\n          state.service.Days.splice(day_index, 1);\n\n          if (day_index === state.editing_day) {\n            state.editing_day = false;\n          }\n\n          return state;\n        });\n      };\n    };\n\n    this.edit_date = day_index => {\n      return edit => {\n        //if date value is good\n        if (edit.target.value) {\n          //set the new date value\n          this.setState(state => {\n            state.service.Days[day_index].Date = edit.target.value + \"T00:00:00.000\" //reset timestamp to local\n            ; //stop editing\n\n            state.editing_day = false; //sort days\n\n            state.service.Days = this.sort_days(state.service.Days);\n            return state;\n          }, //editing date in Add mode sav\n          () => {\n            //if (day_index === 0)\n            if (this.state.mode === \"Add\") {\n              this.save();\n            }\n          });\n        } //bad date value, set null\n        else {\n            this.setState(state => {\n              state.service.Days[day_index].Date = null;\n              return state;\n            });\n          }\n      };\n    };\n\n    this.add_worker = day_index => {\n      return () => {\n        this.setState(state => {\n          //add a worker to the day\n          state.service.Days[day_index].Workers = state.service.Days[day_index].Workers.concat({\n            WorkerID: null,\n            WorkerName: \"\"\n          }); //edit last worker of the current day\n\n          state.editing_day_workers = day_index;\n          state.editing_worker = state.service.Days[day_index].Workers.length - 1;\n          return state;\n        });\n      };\n    };\n\n    this.edit_worker = (day_index, worker_index) => {\n      return (worker_id, worker_name) => {\n        this.setState(state => {\n          state.service.Days[day_index].Workers[worker_index] = {\n            WorkerID: worker_id,\n            WorkerName: worker_name\n          };\n          state.editing_worker = false;\n          return state;\n        });\n      };\n    };\n\n    this.remove_worker = day_index => {\n      return worker_index => {\n        return () => {\n          //remove the given worker from the given Day\n          this.setState(state => {\n            state.service.Days[day_index].Workers.splice(worker_index, 1);\n            return state;\n          });\n        };\n      };\n    };\n\n    this.render_worker = day_index => {\n      return (worker, worker_index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.editing_day_workers === day_index && this.state.editing_worker === worker_index ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: \"3rem\",\n            paddingTop: \"0.25rem\"\n          },\n          children: /*#__PURE__*/_jsxDEV(WorkerDropdown, {\n            label: \"\",\n            default: worker.WorkerID,\n            blank: null,\n            select_option: this.edit_worker(day_index, worker_index),\n            size: \"x-large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 6\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(Clickable, {\n            action: () => {\n              this.setState({\n                editing_day_workers: day_index,\n                editing_worker: worker_index\n              });\n            },\n            content: worker.WorkerName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 4\n      }, this);\n    };\n\n    this.render_day = (day, day_index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [//edit date\n      day_index === this.state.editing_day ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: \"3rem\",\n          paddingBottom: \"0.25rem\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          style: {\n            fontSize: \"x-large\"\n          },\n          value: day.Date ? day.Date.toString().substr(0, 10) : null,\n          onChange: this.edit_date(day_index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(Clickable, {\n          action: () => {\n            //set editing_day to day_index unless already set\n            if (!Number.isInteger(this.state.editing_day)) {\n              this.setState({\n                editing_day: day_index\n              });\n            }\n          },\n          content: //view date\n          new Intl.DateTimeFormat(\"en-US\", {\n            weekday: \"long\",\n            month: \"long\",\n            day: \"numeric\",\n            year: \"numeric\"\n          }).format(new Date(day.Date))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 13\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 6\n      }, this),\n      /*#__PURE__*/\n      //workers\n      _jsxDEV(BulletList, {\n        name_singular: \"worker\",\n        items: day.Workers,\n        map_func: this.render_worker(day_index),\n        add: this.add_worker(day_index),\n        remove: this.remove_worker(day_index)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 3\n    }, this);\n\n    this.render_price = () => {\n      let save_price = () => {\n        this.setState({\n          editing_price: false\n        });\n      };\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.mode === \"Edit\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: //if editing price\n          this.state.editing_price ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Final Price: \", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                style: {\n                  fontSize: \"x-large\"\n                },\n                value: this.state.service.FinalPrice,\n                onChange: edit => {\n                  this.setState(state => {\n                    state.service.FinalPrice = edit.target.value;\n                    return state;\n                  });\n                },\n                onKeyDown: key_down => {\n                  //pressing Enter saves input\n                  if (key_down.key === \"Enter\") save_price();\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 562,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              label: \"Save\",\n              action: save_price\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 585,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 8\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Final Price: \", this.state.service.FinalPrice]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 594,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              label: \"Change\",\n              action: () => {\n                this.setState({\n                  editing_price: true\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 599,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 6\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 4\n      }, this);\n    };\n\n    this.state = this.props.mode === \"Add\" ? {\n      service: {\n        JobID: null,\n        Days: [{\n          Date: \"\",\n          Workers: []\n        }]\n      },\n      editing_day: 0,\n      editing_job: true,\n      mode: this.props.mode\n    } : //else, initialize from props\n    {\n      service: this.props.service,\n      editing_job: false,\n      mode: this.props.mode\n    };\n    this.setState(state => {\n      state.service.Days = this.sort_days(state.service.Days);\n      return state;\n    });\n  } //add escape listener\n\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", key_down => {\n      switch (key_down.key) {\n        //if the user presses escape, hide service info\n        case \"Escape\":\n          this.props.close_service();\n          break;\n        //if the user presses space, submit data\n\n        case \" \":\n          this.save(true);\n          break;\n        //get rid of compiler warning\n\n        default:\n          break;\n      }\n    }, false);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"service-modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"service-modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"service-modal-top\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [this.state.mode, \" Service\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            label: \"X\",\n            action: this.props.close_service,\n            className: \"close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 626,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 6\n        }, this), //errors\n        this.state.errors ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.state.errors.map(error => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error\",\n            children: \"Error: \" + error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 640,\n            columnNumber: 10\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 8\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"service-modal-inner\",\n          children: [//duplicate service error\n          this.state.duplicate_service_error ? this.state.service.JobName + \" already has a Service scheduled for this date.\" : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 658,\n            columnNumber: 9\n          }, this), this.render_job(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 664,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(BulletList, {\n            name_singular: \"day\",\n            name_plural: \"Days\",\n            items: this.state.service.Days,\n            map_func: this.render_day,\n            add: this.add_day,\n            remove: this.remove_day\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 668,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 677,\n            columnNumber: 7\n          }, this), this.render_price()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 6\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"service-modal-bottom\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            label: \"Cancel Service\",\n            action: this.remove\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 687,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            label: \"Save\",\n            action: () => {\n              this.save(true);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 692,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 685,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 622,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/caleb/passwordfix/EWC/front-end/src/ServiceModal.js"],"names":["React","Component","Button","BulletList","Clickable","JobDropdown","WorkerDropdown","Uplink","ServiceModal","constructor","props","has_job_and_date","state","service","JobID","Days","Date","sort_days","days","sort","day1","day2","console","log","create","request_body","ServiceDate","send_data","then","response","error","alert","JSON","stringify","data","errors","length","setState","editing_day","mode","confirm_close","close_service","update","close","ServiceID","FinalPrice","Complete","map","day","Workers","worker","WorkerID","remove","save","edit_job","job_id","job_name","JobName","editing_job","duplicate_service_error","render_job","add_day","Number","isInteger","concat","remove_day","day_index","splice","edit_date","edit","target","value","add_worker","WorkerName","editing_day_workers","editing_worker","edit_worker","worker_index","worker_id","worker_name","remove_worker","render_worker","height","paddingTop","render_day","paddingBottom","fontSize","toString","substr","Intl","DateTimeFormat","weekday","month","year","format","render_price","save_price","editing_price","key_down","key","componentDidMount","document","addEventListener","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport         Button from \"./Button\";\nimport     BulletList from \"./BulletList\";\n//import     BulletItem from \"./BulletList\";\nimport      Clickable from \"./Clickable\";\n\nimport    JobDropdown from \"./JobDropdown\";\nimport WorkerDropdown from \"./WorkerDropdown\";\n\nimport Uplink from \"./Uplink\";\n\nimport \"./styles/indent.css\";\nimport \"./styles/ServiceModal.css\";\n\nexport default class ServiceModal extends Component\n{\n\tconstructor (props)\n\t{\n\t\tsuper (props);\n\n\t\t//if new service, start in edit mode with empty service\n\t\tthis.state = (this.props.mode === \"Add\")\n\t\t?\n\t\t\t{\n\t\t\t\tservice:\n\t\t\t\t{\n\t\t\t\t\tJobID: null,\n\t\t\t\t\tDays:\n\t\t\t\t\t[{\n\t\t\t\t\t\tDate: \"\",\n\t\t\t\t\t\tWorkers: []\n\t\t\t\t\t}]\n\t\t\t\t},\n\t\t\t\tediting_day: 0,\n\t\t\t\tediting_job: true,\n\t\t\t\tmode: this.props.mode\n\t\t\t}\n\t\t:\n\t\t\t//else, initialize from props\n\t\t\t{\n\t\t\t\tservice: this.props.service,\n\t\t\t\tediting_job: false,\n\t\t\t\tmode: this.props.mode\n\t\t\t}\n\t\t;\n\n\t\tthis.setState ((state) =>\n\t\t{\n\t\t\tstate.service.Days = this.sort_days (state.service.Days);\n\n\t\t\treturn state;\n\t\t});\n\t}\n\n\t//add escape listener\n\tcomponentDidMount()\n\t{\n\t\tdocument.addEventListener\n\t\t(\n\t\t\t\"keydown\",\n\n\t\t\t(key_down) =>\n\t\t\t{\n\t\t\t\tswitch (key_down.key)\n\t\t\t\t{\n\t\t\t\t\t//if the user presses escape, hide service info\n\t\t\t\t\tcase \"Escape\":\n\t\t\t\t\t\tthis.props.close_service();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t//if the user presses space, submit data\n\t\t\t\t\tcase \" \":\n\t\t\t\t\t\tthis.save (true);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t//get rid of compiler warning\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tfalse\n\t\t);\n\t}\n\n\thas_job_and_date = () =>\n\t{\n\t\treturn (this.state.service.JobID && this.state.service.Days[0].Date);\n\t}\n\n\tsort_days = (days) =>\n\t{\n\t\tdays.sort\n\t\t(\n\t\t\t(day1, day2) =>\n\t\t\t{\n\t\t\t\tconsole.log (new Date (day1.Date) - new Date (day2.Date));\n\t\t\t\treturn (new Date (day1.Date) - new Date (day2.Date));\n\t\t\t}\n\t\t);\n\n\t\treturn days;\n\t}\n\n\tcreate = () =>\n\t{\n\t\tlet request_body =\n\t\t{\n\t\t\tJobID: this.state.service.JobID,\n\t\t\tServiceDate: this.state.service.Days[0].Date\n\t\t};\n\n\t\tUplink.send_data (\"service\", \"post\", request_body)\n\n\t\t.then ((response) =>\n\t\t{\n\t\t\tif (response.error)\n\t\t\t{\n\t\t\t\talert (JSON.stringify(response.error));\n\t\t\t}\n\n\t\t\telse if (response.data.errors && response.data.errors.length > 0)\n\t\t\t{\n\t\t\t\tthis.setState ((state) =>\n\t\t\t\t{\n\t\t\t\t\tstate.errors = response.data.errors;\n\t\t\t\t\tstate.service.Days[0].Date = null;\n\t\t\t\t\tstate.editing_day = 0;\n\n\t\t\t\t\treturn state;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.setState\n\t\t\t\t({\n\t\t\t\t\tservice: response.data,\n\t\t\t\t\tmode: \"Edit\",\n\t\t\t\t\terrors: []\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tconfirm_close = (response) =>\n\t{\n\t\tif (response.error)\n\t\t{\n\t\t\talert (JSON.stringify(response.error));\n\t\t}\n\n\t\telse\n\t\t{\n\t\t\t//display errors, if any\n\t\t\tif (response.data.errors && response.data.errors.length > 0)\n\t\t\t{\n\t\t\t\tthis.setState ({ errors: response.data.errors });\n\t\t\t}\n\n\t\t\t//if no errors, close\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.props.close_service ();\n\t\t\t}\n\t\t}\n\t};\n\n\tupdate = (close) =>\n\t{\n\t\tconst service = this.state.service;\n\n\t\tlet request_body = \n\t\t{\n\t\t\tServiceID: service.ServiceID,\n\t\t\tJobID: service.JobID,\n\t\t\tFinalPrice: service.FinalPrice,\n\t\t\tComplete: service.Complete,\n\t\t\tDays: service.Days.map\n\t\t\t(\n\t\t\t\t(day) =>\n\t\t\t\t(\n\t\t\t\t\t{\n\t\t\t\t\t\t...day,\n\t\t\t\t\t\tWorkers: day.Workers.map ((worker) => (worker.WorkerID))\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t)\n\t\t};\n\n\t\tUplink.send_data (\n\t\t\t\"service/\" + this.state.service.ServiceID, \"patch\", request_body\n\t\t)\n\n\t\t.then (this.confirm_close);\n\t}\n\n\tremove = () =>\n\t{\n\t\tUplink.send_data (\"service/\" + this.state.service.ServiceID, \"delete\")\n\n\t\t.then (this.confirm_close);\n\t};\n\n\tsave = (close) =>\n\t{\n\t\tif (this.has_job_and_date())\n\t\t{\n\t\t\tif (this.state.mode === \"Add\")\n\t\t\t{\n\t\t\t\tthis.create();\n\t\t\t}\n\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.update (close);\n\t\t\t}\n\t\t}\n\t}\n\n\t//switch the job of the service to the selected option\n\tedit_job = (job_id, job_name) =>\n\t{\n\t\tthis.setState\n\t\t(\n\t\t\t(state) =>\n\t\t\t{\n\t\t\t\tstate.service.JobName = job_name;\n\t\t\t\tstate.service.JobID   = job_id;\n\n\t\t\t\tstate.editing_job = false;\n\n\t\t\t\tstate.duplicate_service_error = false;\n\n\t\t\t\treturn state;\n\t\t\t},\n\n\t\t\t() => { this.save(); }\n\t\t);\n\t}\n\n\t//show the service job name or a dropdown to select it\n\trender_job = () =>\n\t(\n\t\t<div>\n\t\t{\n\t\t\tthis.state.editing_job\n\t\t\t?\n\t\t\t\t<div>\n\n\t\t\t\t\t{/* edit job name */\n\t\t\t\t\t\t(this.state.mode === \"Add\")\n\t\t\t\t\t\t?\n\t\t\t\t\t\t\t<JobDropdown\n\t\t\t\t\t\t\t\tsize=\"x-large\"\n\t\t\t\t\t\t\t\tselect_option={this.edit_job}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t:\n\t\t\t\t\t\t\t<JobDropdown\n\t\t\t\t\t\t\t\tsize=\"x-large\"\n\t\t\t\t\t\t\t\tselect_option={this.edit_job}\n\t\t\t\t\t\t\t\tblank={null}\n\t\t\t\t\t\t\t\tdefault={this.state.service.JobID}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t\t<br />\n\t\t\t\t\t<br />\n\n\t\t\t\t</div>\n\t\t\t:\n\t\t\t\t<div>\n\n\t\t\t\t\t{/* view job name */}\n\t\t\t\t\t<div>Job: {this.state.service.JobName}</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tlabel=\"Change\"\n\t\t\t\t\t\t\taction={() =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.setState ({ editing_job: true });\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\t\t}\n\n\t\t</div>\n\t)\n\n\n\t//add new day to service\n\tadd_day = () =>\n\t{\n\t\tif (!Number.isInteger (this.state.editing_day))\n\t\t{\n\t\t\tthis.setState ((state) =>\n\t\t\t{\n\t\t\t\t//add a day to the Days array with the same workers as the previous day\n\t\t\t\tstate.service.Days = state.service.Days.concat (\n\t\t\t\t{\n\t\t\t\t\tDate: \"\",\n\t\t\t\t\tWorkers: state.service.Days[state.service.Days.length - 1].Workers\n\t\t\t\t});\n\n\t\t\t\t//edit last day\n\t\t\t\tstate.editing_day = state.service.Days.length - 1;\n\n\t\t\t\treturn state;\n\t\t\t});\n\t\t}\n\t}\n\n\t//remove a day from service\n\tremove_day = (day_index) =>\n\t{\n\t\treturn (() =>\n\t\t{\n\t\t\tthis.setState ((state) =>\n\t\t\t{\n\t\t\t\tstate.service.Days.splice (day_index, 1);\n\n\t\t\t\tif (day_index === state.editing_day)\n\t\t\t\t{\n\t\t\t\t\tstate.editing_day = false;\n\t\t\t\t}\n\n\t\t\t\treturn state;\n\t\t\t});\n\t\t});\n\t}\n\n\t//edit the date of a day of a service\n\tedit_date = (day_index) =>\n\t{\n\t\treturn ((edit) =>\n\t\t{\n\t\t\t//if date value is good\n\t\t\tif (edit.target.value)\n\t\t\t{\n\t\t\t\t//set the new date value\n\t\t\t\tthis.setState\n\t\t\t\t(\n\t\t\t\t\t(state) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tstate.service.Days[day_index].Date =\n\t\t\t\t\t\t\tedit.target.value + \"T00:00:00.000\"\t//reset timestamp to local\n\t\t\t\t\t\t;\n\n\t\t\t\t\t\t//stop editing\n\t\t\t\t\t\tstate.editing_day = false;\n\n\t\t\t\t\t\t//sort days\n\t\t\t\t\t\tstate.service.Days = this.sort_days (state.service.Days);\n\n\t\t\t\t\t\treturn state;\n\t\t\t\t\t},\n\n\t\t\t\t\t//editing date in Add mode sav\n\t\t\t\t\t() =>\n\t\t\t\t\t{\n\t\t\t\t\t\t//if (day_index === 0)\n\t\t\t\t\t\tif (this.state.mode === \"Add\")\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.save();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t//bad date value, set null\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.setState ((state) =>\n\t\t\t\t{\n\t\t\t\t\tstate.service.Days[day_index].Date = null;\n\n\t\t\t\t\treturn state;\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t//add new worker to service day\n\tadd_worker = (day_index) =>\n\t{\n\t\treturn (() =>\n\t\t{\n\t\t\tthis.setState ((state) =>\n\t\t\t{\n\t\t\t\t//add a worker to the day\n\t\t\t\tstate.service.Days[day_index].Workers =\n\t\t\t\tstate.service.Days[day_index].Workers.concat (\n\t\t\t\t{\n\t\t\t\t\tWorkerID: null,\n\t\t\t\t\tWorkerName: \"\"\n\t\t\t\t});\n\n\t\t\t\t//edit last worker of the current day\n\t\t\t\tstate.editing_day_workers = day_index;\n\t\t\t\tstate.editing_worker\n\t\t\t\t\t= state.service.Days[day_index].Workers.length - 1;\n\n\t\t\t\treturn state;\n\t\t\t});\n\t\t});\n\t}\n\n\tedit_worker = (day_index, worker_index) =>\n\t{\n\t\treturn ((worker_id, worker_name) =>\n\t\t{\n\t\t\tthis.setState ((state) =>\n\t\t\t{\n\t\t\t\tstate.service.Days[day_index].Workers[worker_index] = \n\t\t\t\t{\n\t\t\t\t\tWorkerID: worker_id,\n\t\t\t\t\tWorkerName: worker_name\n\t\t\t\t};\n\n\t\t\t\tstate.editing_worker = false;\n\n\t\t\t\treturn state;\n\t\t\t});\n\t\t});\n\t}\n\n\t//remove a worker from a service\n\tremove_worker = (day_index) =>\n\t{\n\t\treturn ((worker_index) =>\n\t\t{\n\t\t\treturn (() =>\n\t\t\t{\n\t\t\t\t//remove the given worker from the given Day\n\t\t\t\tthis.setState ((state) =>\n\t\t\t\t{\n\t\t\t\t\tstate.service.Days[day_index].Workers.splice (worker_index, 1);\n\t\t\t\t\t\n\t\t\t\t\treturn state;\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\t//show a worker\n\trender_worker = (day_index) =>\n\t{\n\t\treturn ((worker, worker_index) =>\n\t\t(\n\t\t\t<div>\n\t\t\t{\n\t\t\t\tthis.state.editing_day_workers === day_index &&\n\t\t\t\tthis.state.editing_worker      === worker_index\n\t\t\t\t?\n\t\t\t\t\t<div style={{height: \"3rem\", paddingTop: \"0.25rem\"}}>\n\t\t\t\t\t<WorkerDropdown\n\t\t\t\t\t\tlabel=\"\"\n\t\t\t\t\t\tdefault={worker.WorkerID}\n\t\t\t\t\t\tblank={null}\n\t\t\t\t\t\tselect_option={\n\t\t\t\t\t\t\tthis.edit_worker (day_index, worker_index)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsize=\"x-large\"\n\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t:\n\t\t\t\t\t<span> <Clickable\n\t\t\t\t\t\taction={() =>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.setState (\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tediting_day_workers: day_index,\n\t\t\t\t\t\t\t\tediting_worker: worker_index\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tcontent={worker.WorkerName}\n\t\t\t\t\t/> </span>\n\t\t\t}\n\t\t\t</div>\n\t\t));\n\t}\n\n\t//show a day and its workers\n\trender_day = (day, day_index) =>\n\t(\n\t\t<div>\n\n\t\t\t{\t//edit date\n\t\t\t\tday_index === this.state.editing_day\n\t\t\t\t?\n\t\t\t\t\t<div style={{height: \"3rem\", paddingBottom: \"0.25rem\"}}>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\t\tstyle={{fontSize: \"x-large\"}}\n\t\t\t\t\t\t\tvalue={ day.Date ? day.Date.toString().substr(0, 10) : null }\n\t\t\t\t\t\t\tonChange={this.edit_date (day_index)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t:\n\t\t\t\t\t<span> <Clickable\n\n\t\t\t\t\t\taction={() =>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t//set editing_day to day_index unless already set\n\t\t\t\t\t\t\tif (!Number.isInteger (this.state.editing_day))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.setState ({ editing_day: day_index });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\n\t\t\t\t\t\tcontent={\n\t\t\t\t\t\t\t//view date\n\t\t\t\t\t\t\tnew Intl.DateTimeFormat ( \"en-US\",\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tweekday: \"long\",\n\t\t\t\t\t\t\t\tmonth: \"long\",\n\t\t\t\t\t\t\t\tday: \"numeric\",\n\t\t\t\t\t\t\t\tyear: \"numeric\"\n\t\t\t\t\t\t\t}).format (new Date (day.Date))\n\t\t\t\t\t\t}\n\t\t\t\t\t/> </span>\n\t\t\t\t}\n\n\t\t\t{\t//workers\n\t\t\t\t<BulletList\n\t\t\t\t\tname_singular=\"worker\"\n\t\t\t\t\titems={day.Workers}\n\t\t\t\t\tmap_func={this.render_worker (day_index)}\n\t\t\t\t\tadd={this.add_worker (day_index)}\n\t\t\t\t\tremove={this.remove_worker (day_index)}\n\t\t\t\t/>\n\t\t\t}\n\n\t\t</div>\n\t)\n\n\t//display and edit the final price\n\trender_price = () =>\n\t{\n\t\tlet save_price = () =>\n\t\t{\n\t\t\tthis.setState ({ editing_price: false });\n\t\t};\n\n\t\treturn (\n\n\t\t\t<div>\n\t\t\t{\n\t\t\t\tthis.state.mode === \"Edit\"\n\t\t\t\t?\n\t\t\t\t\t<div>\n\t\t\t\t\t{\n\t\t\t\t\t\t//if editing price\n\t\t\t\t\t\tthis.state.editing_price\n\t\t\t\t\t\t?\n\t\t\t\t\t\t\t<div>\n\n\t\t\t\t\t\t\t\t{/* input */}\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\tFinal Price: <input\n\t\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\t\tstyle={{fontSize: \"x-large\"}}\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.service.FinalPrice}\n\t\t\t\t\t\t\t\t\t\tonChange={(edit) =>\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tthis.setState ((state) =>\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tstate.service.FinalPrice = edit.target.value;\n\n\t\t\t\t\t\t\t\t\t\t\t\treturn state;\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tonKeyDown={(key_down) =>\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t//pressing Enter saves input\n\t\t\t\t\t\t\t\t\t\t\tif (key_down.key === \"Enter\")\n\t\t\t\t\t\t\t\t\t\t\t\tsave_price();\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t{/* save button */}\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tlabel=\"Save\"\n\t\t\t\t\t\t\t\t\taction={save_price}\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t:\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t{/* not edting price */}\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\tFinal Price: {this.state.service.FinalPrice}\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t{/* change button */}\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tlabel=\"Change\"\n\t\t\t\t\t\t\t\t\taction={() =>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tthis.setState ({ editing_price: true });\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t:\n\t\t\t\t\t<div></div>\n\t\t\t} \n\t\t\t</div>\n\n\t\t);\n\t}\n\n\trender()\n\t{\n\t\treturn (\n\n\t\t\t<div className=\"service-modal\">\n\t\t\t\t<div className=\"service-modal-content\">\n\n\t\t\t\t\t<div className=\"service-modal-top\">\n\t\t\t\t\t\t<div>{this.state.mode} Service</div>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tlabel=\"X\"\n\t\t\t\t\t\t\taction={this.props.close_service}\n\t\t\t\t\t\t\tclassName=\"close\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{\t//errors\n\t\t\t\t\t\tthis.state.errors\n\t\t\t\t\t\t?\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.state.errors.map ((error) =>\n\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t<div className=\"error\">{\"Error: \" + error}</div>\n\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t:\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t}\n\n\t\t\t\t\t{/* main scrollable content */}\n\t\t\t\t\t<div className=\"service-modal-inner\">\n\n\t\t\t\t\t\t{\t//duplicate service error\n\t\t\t\t\t\t\tthis.state.duplicate_service_error\n\t\t\t\t\t\t\t?\n\t\t\t\t\t\t\t\tthis.state.service.JobName\n\t\t\t\t\t\t\t\t+ \" already has a Service scheduled for this date.\"\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t{/* job name or dropdown */}\n\t\t\t\t\t\t{this.render_job()}\n\n\t\t\t\t\t\t<br/>\n\n\t\t\t\t\t\t{/* days and workers */}\n\n\t\t\t\t\t\t<BulletList\n\t\t\t\t\t\t\tname_singular=\"day\"\n\t\t\t\t\t\t\tname_plural=\"Days\"\n\t\t\t\t\t\t\titems={this.state.service.Days}\n\t\t\t\t\t\t\tmap_func={this.render_day}\n\t\t\t\t\t\t\tadd={this.add_day}\n\t\t\t\t\t\t\tremove={this.remove_day}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\n\t\t\t\t\t\t{/* final price */}\n\t\t\t\t\t\t{this.render_price()}\n\n\t\t\t\t\t</div> {/* end service-modal-inner */}\n\n\t\t\t\t\t{/* save and cancel */}\n\t\t\t\t\t<div className=\"service-modal-bottom\">\n\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tlabel=\"Cancel Service\"\n\t\t\t\t\t\t\taction={this.remove}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tlabel=\"Save\"\n\t\t\t\t\t\t\taction={() =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.save(true);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}